local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Create a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create a TextButton
local textButton = Instance.new("TextButton")
textButton.Size = UDim2.new(0, 200, 0, 50) -- Size of the button
textButton.Position = UDim2.new(0.5, -100, 0.5, -25) -- Centered position
textButton.Text = "Click Me!" -- Button text
textButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Button background color (red)
textButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- Text color (white)
textButton.Parent = screenGui

-- Load the audio asset (replace with your audio ID)
local audioId = "rbxassetid://5129686200" -- Replace with your audio ID
local sound = Instance.new("Sound")
sound.SoundId = audioId
sound.Parent = game.Workspace

local isEffectActive = false
local colorCorrection = nil
local sphere = nil
local originalGravity = Workspace.Gravity -- Store the original gravity value

-- Replace 'YOUR_ANIMATION_ID' with the actual ID of your animation
local animationId = "rbxassetid://86385332307004"

-- Get the player's character and humanoid
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Load the animation
local animation = Instance.new("Animation")
animation.AnimationId = animationId
local animationTrack = humanoid:LoadAnimation(animation)

-- Function to check if the player is moving
local function isMoving()
	local velocity = humanoid.MoveDirection.Magnitude
	return velocity > 0
end

-- Function to handle idle animation
local function handleIdleAnimation()
	if isMoving() then
		if animationTrack.IsPlaying then
			animationTrack:Stop()
		end
	else
		if not animationTrack.IsPlaying then
			animationTrack:Play()
		end
	end
end

-- Connect the function to the Humanoid's Running event
humanoid.Running:Connect(handleIdleAnimation)

-- Initial check
handleIdleAnimation()

-- Function to handle button click
local function onButtonClick()
    if not isEffectActive then
        -- Start the effect
        -- Play the audio
        sound:Play()

        -- Wait for 2 seconds
        wait(2.15)

        -- Create and configure the sphere
        sphere = Instance.new("Part")
        sphere.Shape = Enum.PartType.Ball
        sphere.Size = Vector3.new(5, 5, 5)
        sphere.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        sphere.Material = Enum.Material.ForceField
        sphere.Anchored = true
        sphere.CanCollide = false
        sphere.BrickColor = BrickColor.new("Black")
        sphere.Parent = game.Workspace

        -- Create and configure the ColorCorrectionEffect
        colorCorrection = Instance.new("ColorCorrectionEffect")
        colorCorrection.Name = "WhiteOutEffect"
        colorCorrection.Parent = Lighting

        -- Tween the ColorCorrectionEffect properties to make everything white
        local colorCorrectionTweenInfo = TweenInfo.new(
            1.5, -- Duration of the tween (1.5 seconds)
            Enum.EasingStyle.Linear, -- Easing style
            Enum.EasingDirection.InOut -- Easing direction
        )

        local colorCorrectionGoal = {
            Saturation = -1, -- Reduce saturation to make colors less vibrant
            Contrast = 1, -- Increase contrast
            Brightness = 0.5 -- Adjust brightness to make it brighter
        }

        local colorCorrectionTween = TweenService:Create(colorCorrection, colorCorrectionTweenInfo, colorCorrectionGoal)
        colorCorrectionTween:Play()

        -- Create a tween for the sphere's expansion
        local sphereTweenInfo = TweenInfo.new(
            1.5, -- Duration of the tween (1.5 seconds)
            Enum.EasingStyle.Linear, -- Easing style
            Enum.EasingDirection.InOut -- Easing direction
        )

        local sphereGoal = {Size = Vector3.new(500, 500, 500)} -- Target size of the sphere

        local sphereTween = TweenService:Create(sphere, sphereTweenInfo, sphereGoal)
        sphereTween:Play()

        -- Apply low gravity
        Workspace.Gravity = 50 -- Adjust gravity to a lower value for low gravity effect

        -- Anchor all players except the Time Stop user
        local timeStopUser = game.Players.LocalPlayer
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= timeStopUser and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                humanoidRootPart.Anchored = true
                -- Anchor limbs
                for _, limb in pairs(player.Character:GetChildren()) do
                    if limb:IsA("Part") and limb.Name ~= "HumanoidRootPart" then
                        limb.Anchored = true
                    end
                end
            end
        end

        -- Wait for the sphere tween to complete
        sphereTween.Completed:Connect(function()
            sphere:Destroy() -- Ensure sphere is destroyed
        end)

        -- Wait for the ColorCorrectionEffect tween to complete
        colorCorrectionTween.Completed:Connect(function()
            -- Optionally, you can remove the ColorCorrectionEffect here if needed
            -- colorCorrection:Destroy() -- Uncomment if you want to remove it
        end)

        isEffectActive = true
    else
        -- Stop the effect
        -- Unanchor all players
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                humanoidRootPart.Anchored = false
                -- Unanchor limbs
                for _, limb in pairs(player.Character:GetChildren()) do
                    if limb:IsA("Part") and limb.Name ~= "HumanoidRootPart" then
                        limb.Anchored = false
                    end
                end
            end
        end

        -- Remove the ColorCorrectionEffect
        if colorCorrection then
            colorCorrection:Destroy()
        end

        -- Destroy the sphere if it exists
        if sphere then
            sphere:Destroy()
        end

        -- Revert gravity to original value
        Workspace.Gravity = originalGravity

        isEffectActive = false
    end
end

-- Connect the button click to the function
textButton.MouseButton1Click:Connect(onButtonClick)
